use ('cinema');
db.movies.drop();
db.movies.insertMany([
  {
    title: "Batman",
    category: [
      "action",
      "adventure"
    ],
    imdbRating: 7.7,
    budget: 35,
    ratings: [ 85, 100, 102, 105 ],
    description: "The Dark Knight of Gotham City begins his war on crime with his first major enemy being Jack Napier, a criminal who becomes the clownishly homicidal Joker."
  },
  {
    title: "Godzilla",
    category: [
      "action",
      "adventure",
      "sci-fi"
    ],
    imdbRating: 6.6,
    budget: 10,
    ratings: [ 78, 52, 95, 102 ],
    description: "The world is beset by the appearance of monstrous creatures, but one of them may be the only one who can save humanity."
  },
  {
    title: "Home Alone",
    category: [
      "family",
      "comedy"
    ],
    imdbRating: 7.4,
    ratings: [ 200, 99, 65 ],
    description: "An eight-year-old troublemaker must protect his house from a pair of burglars when he is accidentally left home alone by his family during Christmas vacation."
  },
  {
    title: "Matrix",
    category: [
      "sci-fi",
      "action"
    ],
    imdbRating: 8.7,
    budget: 15,
    ratings: [ 77, 92, 150, 180 ],
    description: "When a beautiful stranger leads computer hacker Neo to a forbidding underworld, he discovers the shocking truth--the life he knows is the elaborate deception of an evil cyber-intelligence."
  },
  {
    title: "Pulp Fiction",
    category: [
      "crime",
      "drama"
    ],
    imdbRating: 8.9,
    budget: 8,
    ratings: [ 110, 84, 95, 90 ],
    description: "The lives of two mob hitmen, a boxer, a gangster and his wife, and a pair of diner bandits intertwine in four tales of violence and redemption."
  }
]);
db.movies.find().count();
use ('cinema'); //01
db.movies.find(
  {
    category:{
      $all:['action','adventure']
      }
  });

use ('cinema'); //02
db.movies.find({
  category:{
    $all:['action','sci-fi']
  },
  imdbRating:{$gt:8}
})
use ('cinema'); // 03
db.movies.find({
  ratings:{
    $elemMatch:{
      $gte: 103
    }
  }
}, {title:1, ratings:1, _id:0})
use ('cinema'); // 04
db.movies.find({
  ratings:{
    $elemMatch:{
      $gte: 100, $lte: 105
    }
  }
}, {title:1, ratings:1, _id:0})
use ('cinema'); // 05
db.movies.find(
  {
  ratings:{
    $elemMatch:{$gte: 6
    , $lte: 105, $mod: [9,0] }
  }
}, {title:1, ratings:1, _id:0})
use ('cinema'); //06
db.movies.find({
  category: 'adventure',
  ratings: {$elemMatch:{$gte: 103}},
}, {title:1, ratings:1, _id:0, category:1}).count()
use ('cinema'); // 07
db.movies.find({
  category:{$size:2}
},{title:1, _id:0})
use ('cinema'); //08
db.movies.find({
  ratings:{$size:4}
},{title:1, _id:0})
use ('cinema'); //09
db.movies.find({
  budget:{
    $mod:[5,0]
  },
  category:{$size:2}
})
use ('cinema');//10
db.movies.find({
  $or:[
    {category: 'sci-fi'},
    {ratings:{$elemMatch: {$gt:199}}}
  ]
},{
  title:1, _id:0, category:1, ratings:1
})

use ('cinema');//11
db.movies.find({
  $and:[
    {ratings: {$size: 4}},
    {category:{$in:['family','adventure']}},
    {imdbRating:{$gte:7}}
  ]
})
use ('cinema'); //12
db.movies.find({
  description:{$regex: /^The/i}
})
use ('cinema');// 13
db.movies.find({
  description:{$regex: /humanity.$/i}
})
use ('cinema');
use ('cinema');
use ('cinema');
use ('cinema');
use ('cinema');
use ('cinema');
use ('cinema');
use ('cinema');
