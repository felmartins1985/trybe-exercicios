{"ast":null,"code":"var _jsxFileName = \"/home/oem/trybe/trybe-exercicios/front-end/bloco11-componentes-com-estado-eventos-e-formularios-com-react/dia-2-formularios-no-react/react/my-form-2.0/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.upperCase = e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        name: value.toUpperCase()\n      });\n    };\n\n    this.removeSpecial = e => {\n      const {\n        value\n      } = e.target;\n      this.setState({\n        adress: value.replace(/[^a-zA-Zs]/g, \"\")\n      });\n    };\n\n    this.onBlurCheck = e => {\n      let {\n        name\n      } = e.target;\n      console.log(e.target.value);\n\n      if (name === 'city') {\n        e.target.value = e.target.value.match(/^\\d/) ? '' : e.target.value;\n      }\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      cpf: 0,\n      adress: '',\n      city: '',\n      state: '',\n      house: false,\n      apt: false,\n      curriculum: '',\n      job: '',\n      jobDescription: ''\n    };\n  }\n\n  render() {\n    const brazilStates = [\"Acre\", \"Alagoas\", \"Amapá\", \"Amazonas\", \"Bahia\", \"Ceará\", \"Distrito Federal\", \"Espirito Santo\", \"Goiás\", \"Maranhão\", \"Mato Grosso do Sul\", \"Mato Grosso\", \"Minas Gerais\", \"Pará\", \"Paraíba\", \"Paraná\", \"Pernambuco\", \"Piauí\", \"Rio de Janeiro\", \"Rio Grande do Norte\", \"Rio Grande do Sul\", \"Rondônia\", \"Roraima\", \"Santa Catarina\", \"São Paulo\", \"Sergipe\", \"Tocantins\"];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Dados Pessoais\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: [\"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: this.state.name,\n              maxLength: \"40\",\n              required: true,\n              onChange: this.upperCase\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              maxLength: \"50\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cpf\",\n            children: [\"CPF:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"cpf\",\n              maxLength: \"11\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"adress\",\n            children: [\"Endere\\xE7o:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"adress\",\n              value: this.state.adress,\n              maxLength: \"200\",\n              onChange: this.removeSpecial,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"city\",\n            children: [\"Cidade:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"city\",\n              maxLength: \"28\",\n              required: true,\n              onBlur: this.onBlurCheck\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"countryState\",\n            children: [\"Estado:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"countryState\",\n              id: \"countryState\",\n              required: true,\n              children: brazilStates.map(brazilState => /*#__PURE__*/_jsxDEV(\"option\", {\n                children: state\n              }, state, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 54\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"house\",\n            children: [\"Casa: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"house\",\n              name: \"house\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"house\",\n            children: [\"Apartamento:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              id: \"house\",\n              name: \"house\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Dados do seu \\xFAltimo emprego\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"curriculum\",\n            children: [\"Resumo do seu curr\\xEDculo:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"curriculum\",\n              maxLength: \"1000\",\n              required: true,\n              children: \"Escreva aqui\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"job\",\n            children: [\"Cargo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"job\",\n              maxLength: \"40\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            type: \"jobDescription\",\n            children: [\"Descri\\xE7\\xE3o do cargo:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"jobDescription\",\n              maxLength: \"500\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/oem/trybe/trybe-exercicios/front-end/bloco11-componentes-com-estado-eventos-e-formularios-com-react/dia-2-formularios-no-react/react/my-form-2.0/src/App.js"],"names":["React","App","Component","constructor","upperCase","e","value","target","setState","name","toUpperCase","removeSpecial","adress","replace","onBlurCheck","console","log","match","state","email","cpf","city","house","apt","curriculum","job","jobDescription","render","brazilStates","map","brazilState"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      cpf: 0,\n      adress: '',\n      city: '',\n      state: '',\n      house: false,\n      apt: false,\n      curriculum: '',\n      job: '',\n      jobDescription: '',\n    }\n  }\n  upperCase = (e) => {\n    const { value } = e.target\n    this.setState({ name: value.toUpperCase() })\n  }\n  removeSpecial = (e) => {\n    const { value } = e.target\n    this.setState({ adress: value.replace(/[^a-zA-Zs]/g, \"\") })\n  }\n  onBlurCheck = (e) => {\n    let { name } = e.target;\n    console.log(e.target.value)\n    if (name === 'city') {\n      e.target.value = e.target.value.match(/^\\d/) ? '' : e.target.value;\n\n    }\n  }\n  render() {\n    const brazilStates = [\n      \"Acre\",\n      \"Alagoas\",\n      \"Amapá\",\n      \"Amazonas\",\n      \"Bahia\",\n      \"Ceará\",\n      \"Distrito Federal\",\n      \"Espirito Santo\",\n      \"Goiás\",\n      \"Maranhão\",\n      \"Mato Grosso do Sul\",\n      \"Mato Grosso\",\n      \"Minas Gerais\",\n      \"Pará\",\n      \"Paraíba\",\n      \"Paraná\",\n      \"Pernambuco\",\n      \"Piauí\",\n      \"Rio de Janeiro\",\n      \"Rio Grande do Norte\",\n      \"Rio Grande do Sul\",\n      \"Rondônia\",\n      \"Roraima\",\n      \"Santa Catarina\",\n      \"São Paulo\",\n      \"Sergipe\",\n      \"Tocantins\",\n    ];\n    return (\n      <div>\n        <fieldset>\n          <legend>Dados Pessoais</legend>\n          <form>\n            <label htmlFor=\"name\">\n              Nome:\n              <input type='text' name='name' value={this.state.name} maxLength='40' required onChange={this.upperCase}>\n              </input>\n            </label>\n            <label htmlFor=\"email\">\n              Email:\n              <input type='email' name='email' maxLength='50' required></input>\n            </label>\n            <label htmlFor='cpf'>\n              CPF:\n              <input type='text' name='cpf' maxLength='11' required></input>\n            </label>\n            <label htmlFor='adress'>\n              Endereço:\n              <input type='text' name='adress' value={this.state.adress} maxLength='200' onChange={this.removeSpecial} required></input>\n            </label>\n            <label htmlFor='city'>\n              Cidade:<input type='text' name='city' maxLength='28' required onBlur={this.onBlurCheck}></input>\n            </label>\n            <label htmlFor='countryState'>\n              Estado:<select name=\"countryState\" id='countryState' required>\n                {brazilStates.map((brazilState) =>   <option key={state}>{state}</option>)}\n              </select>\n            </label>\n            <label htmlFor='house'>\n              Casa: <input type='radio' id='house' name=\"house\" required></input>\n            </label>\n            <label htmlFor='house'>\n              Apartamento:<input type='radio' id='house' name=\"house\" required></input>\n            </label>\n          </form>\n        </fieldset>\n        <fieldset>\n          <legend>Dados do seu último emprego</legend>\n          <form>\n            <label htmlFor='curriculum'>\n              Resumo do seu currículo:\n              <textarea name='curriculum' maxLength='1000' required>Escreva aqui</textarea>\n            </label>\n            <label htmlFor='job'>\n              Cargo:\n              <input type='text' name='job' maxLength='40' required></input>\n            </label>\n            <label type='jobDescription'>\n              Descrição do cargo:\n              <input type='text' name='jobDescription' maxLength='500' required></input>\n\n            </label>\n          </form>\n        </fieldset>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}