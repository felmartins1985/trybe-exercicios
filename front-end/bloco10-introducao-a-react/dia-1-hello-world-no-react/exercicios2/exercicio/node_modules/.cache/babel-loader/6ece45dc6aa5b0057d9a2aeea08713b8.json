{"ast":null,"code":"var _jsxFileName = \"/home/oem/trybe/trybe-exercicios/front-end/bloco10-introducao-a-react/dia-1-hello-world-no-react/exercicios2/exercicio/src/Content.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst conteudos = [{\n  conteudo: \"High Order Functions\",\n  bloco: 8,\n  status: \"Aprendido\"\n}, {\n  conteudo: \"Composicao de Componentes\",\n  bloco: 11,\n  status: \"Aprendendo\"\n}, {\n  conteudo: \"Composicao de Estados\",\n  bloco: 12,\n  status: \"Aprenderei\"\n}, {\n  conteudo: \"Redux\",\n  bloco: 16,\n  status: \"Aprenderei\"\n}];\n\nclass Content extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: conteudos.map(obj =>\n      /*#__PURE__*/\n      //eu tenho que colocar duas divs por dois motivos: primeiro que quando se coloca mais de uma tag, é necessario colocar uma div ou <>.\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: `O conteudo é: ${obj.conteudo}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Status: ${obj.status}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: `Bloco: ${obj.bloco}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, obj.conteudo, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Content;","map":{"version":3,"sources":["/home/oem/trybe/trybe-exercicios/front-end/bloco10-introducao-a-react/dia-1-hello-world-no-react/exercicios2/exercicio/src/Content.jsx"],"names":["React","conteudos","conteudo","bloco","status","Content","Component","render","map","obj"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,SAAS,GAAG,CAChB;AACEC,EAAAA,QAAQ,EAAE,sBADZ;AAEEC,EAAAA,KAAK,EAAE,CAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CADgB,EAMhB;AACEF,EAAAA,QAAQ,EAAE,2BADZ;AAEEC,EAAAA,KAAK,EAAE,EAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CANgB,EAWhB;AACEF,EAAAA,QAAQ,EAAE,uBADZ;AAEEC,EAAAA,KAAK,EAAE,EAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CAXgB,EAgBhB;AACEF,EAAAA,QAAQ,EAAE,OADZ;AAEEC,EAAAA,KAAK,EAAE,EAFT;AAGEC,EAAAA,MAAM,EAAE;AAHV,CAhBgB,CAAlB;;AAsBA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AACpCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACGN,SAAS,CAACO,GAAV,CAAeC,GAAD;AAAA;AAAU;AACvB;AAAA,gCACE;AAAA,oBAAK,iBAAgBA,GAAG,CAACP,QAAS;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAK,WAAUO,GAAG,CAACL,MAAO;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAK,UAASK,GAAG,CAACN,KAAM;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA,SAAUM,GAAG,CAACP,QAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAbmC;;AAetC,eAAeG,OAAf","sourcesContent":["import React from \"react\";\nconst conteudos = [\n  {\n    conteudo: \"High Order Functions\",\n    bloco: 8,\n    status: \"Aprendido\",\n  },\n  {\n    conteudo: \"Composicao de Componentes\",\n    bloco: 11,\n    status: \"Aprendendo\",\n  },\n  {\n    conteudo: \"Composicao de Estados\",\n    bloco: 12,\n    status: \"Aprenderei\",\n  },\n  {\n    conteudo: \"Redux\",\n    bloco: 16,\n    status: \"Aprenderei\",\n  },\n];\nclass Content extends React.Component {\n  render() {\n    return (\n      <div className=\"content\">\n        {conteudos.map((obj) => (//eu tenho que colocar duas divs por dois motivos: primeiro que quando se coloca mais de uma tag, é necessario colocar uma div ou <>.\n          <div key={obj.conteudo}> \n            <p>{`O conteudo é: ${obj.conteudo}`}</p>\n            <p>{`Status: ${obj.status}`}</p>\n            <p>{`Bloco: ${obj.bloco}`}</p>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\nexport default Content;\n"]},"metadata":{},"sourceType":"module"}